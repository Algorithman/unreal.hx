/**
   * 
   * WARNING! This file was autogenerated by: 
   *  _   _ _____     ___   _   _ __   __ 
   * | | | |  ___|   /   | | | | |\ \ / / 
   * | | | | |__    / /| | | |_| | \ V /  
   * | | | |  __|  / /_| | |  _  | /   \  
   * | |_| | |___  \___  | | | | |/ /^\ \ 
   *  \___/\____/      |_/ \_| |_/\/   \/ 
   * 
   * This file was autogenerated by UE4HaxeExternGenerator using UHT definitions. It only includes UPROPERTYs and UFUNCTIONs. Do not modify it!
   * In order to add more definitions, create or edit a type with the same name/package, but with an `_Extra` suffix
**/
package unreal.twitchlivestreaming;


/**
  WARNING: This type was not defined as DLL export on its declaration. Because of that, its properties/methods are inaccessible
  
  
**/
@:glueCppIncludes("TwitchProjectSettings.h")
@:noClass @:uextern extern class UTwitchProjectSettings extends unreal.UObject {
  
  /**
    Twitch "client secret" ID.  This is required if you want to use direct authentication instead of authenticating through
              a web browser.
  **/
  public var DirectAuthenticationClientSecretID : unreal.FString;
  
  /**
    The web page the user should be sent to if something went wrong after logging in.
  **/
  public var AuthFailureRedirectURI : unreal.FString;
  
  /**
    The web page the user should be sent to after they've logged in successfully.  This page should usually tell the user
              that they've logged in, and they can task switch back to the application now.
  **/
  public var AuthSuccessRedirectURI : unreal.FString;
  
  /**
    The port number on the localhost to use when authenticating using implicit grant authentication.  This should be the same
              port number as the one used in the RedirectURI.
  **/
  public var LocalPortNumber : unreal.Int32;
  
  /**
    The redirect URI is the web page that the user will be redirected to after authenticating with Twitch.  Usually this page
                  would show that the login was successful and the user can simply close the browser tab.  If you don't want to host a page
                  you can simply point this to a localhost port.  Remember, Twitch requires you to set the RedirectURI in your application's
                  configuration page on the Twitch web site.  If the URI doesn't exactly match what is here, authentication will fail.
  **/
  public var RedirectURI : unreal.FString;
  
  /**
    This is the Twitch Client ID for your game's Twitch application.  You'll need to supply a valid Client ID for your game in order for
                  it to be allowed to broadcast to Twitch.  You can get a Client ID by visiting the Twitch web site, logging in and creating a
                  Twitch Application for your game.  Copy the Client ID from the Twitch web site into this field.
  **/
  public var ApplicationClientID : unreal.FString;
  
}
