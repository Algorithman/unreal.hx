/**
   * 
   * WARNING! This file was autogenerated by: 
   *  _   _ _____     ___   _   _ __   __ 
   * | | | |  ___|   /   | | | | |\ \ / / 
   * | | | | |__    / /| | | |_| | \ V /  
   * | | | |  __|  / /_| | |  _  | /   \  
   * | |_| | |___  \___  | | | | |/ /^\ \ 
   *  \___/\____/      |_/ \_| |_/\/   \/ 
   * 
   * This file was autogenerated by UE4HaxeExternGenerator using UHT definitions. It only includes UPROPERTYs and UFUNCTIONs. Do not modify it!
   * In order to add more definitions, create or edit a type with the same name/package, but with an `_Extra` suffix
**/
package unreal.leapmotion;


/**
  The Arm class represents the forearm.
  
  Leap API reference: https://developer.leapmotion.com/documentation/cpp/api/Leap.Arm.html
**/
@:glueCppIncludes("LeapArm.h")
@:uextern extern class ULeapArm extends unreal.UObject {
  
  /**
    The position of the wrist of this hand.
    @return A vector containing the coordinates of the wrist position in centimeters.
  **/
  public var WristPosition : unreal.FVector;
  
  /**
    The estimated width of the palm when the hand is in a flat position.
    @return Width
  **/
  public var Width : unreal.Float32;
  
  /**
    Reports whether this is a valid Hand object.
    @return True, if this Hand object contains valid tracking data.
  **/
  public var IsValid : Bool;
  
  /**
    The position of the elbow.
  **/
  public var ElbowPosition : unreal.FVector;
  
  /**
    The normalized direction in which the arm is pointing (from elbow to wrist).
  **/
  public var Direction : unreal.FVector;
  
  /**
    The center of the forearm.
  **/
  public var Center : unreal.FVector;
  
  /**
    The orthonormal basis vectors for the Arm bone as a Matrix.
  **/
  public var Basis : unreal.FMatrix;
  
  /**
    Basis matrix in rotation form for the arm given the hand
    @param HandType left or right
    @return Orientation basis
  **/
  @:final public function GetOrientation(handType : unreal.leapmotion.LeapHandType) : unreal.FRotator;
  
}
