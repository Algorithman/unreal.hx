/**
   * 
   * WARNING! This file was autogenerated by: 
   *  _   _ _____     ___   _   _ __   __ 
   * | | | |  ___|   /   | | | | |\ \ / / 
   * | | | | |__    / /| | | |_| | \ V /  
   * | | | |  __|  / /_| | |  _  | /   \  
   * | |_| | |___  \___  | | | | |/ /^\ \ 
   *  \___/\____/      |_/ \_| |_/\/   \/ 
   * 
   * This file was autogenerated by UE4HaxeExternGenerator using UHT definitions. It only includes UPROPERTYs and UFUNCTIONs. Do not modify it!
   * In order to add more definitions, create or edit a type with the same name/package, but with an `_Extra` suffix
**/
package unreal.umg;


/**
  A border is a container widget that can contain one child widget, providing an opportunity
  to surround it with a background image and adjustable padding.
  
  * Single Child
  * Image
**/
@:umodule("UMG")
@:glueCppIncludes("UMG.h")
@:uextern @:uclass extern class UBorder extends unreal.umg.UContentWidget {
  
  /**
    Image to use for the border
  **/
  @:deprecated @:uproperty private var Brush_DEPRECATED : unreal.USlateBrushAsset;
  
  /**
    Whether or not to show the disabled effect when this border is disabled
  **/
  @:uproperty public var bShowEffectWhenDisabled : Bool;
  
  /**
    Scales the computed desired size of this border and its contents. Useful
    for making things that slide open without having to hard-code their size.
    Note: if the parent widget is set up to ignore this widget's desired size,
    then changing this value will have no effect.
  **/
  @:uproperty public var DesiredSizeScale : unreal.FVector2D;
  
  /**
    Color and opacity of the actual border image
  **/
  @:uproperty public var BrushColor : unreal.FLinearColor;
  
  /**
    Brush to drag as the background
  **/
  @:uproperty public var Background : unreal.slatecore.FSlateBrush;
  
  /**
    The alignment of the content vertically.
  **/
  @:uproperty public var VerticalAlignment : unreal.slatecore.EVerticalAlignment;
  
  /**
    The alignment of the content horizontally.
  **/
  @:uproperty public var HorizontalAlignment : unreal.slatecore.EHorizontalAlignment;
  
  /**
    The padding area between the slot and the content it contains.
  **/
  @:uproperty public var Padding : unreal.slatecore.FMargin;
  
  /**
    Color and opacity multiplier of content in the border
  **/
  @:uproperty public var ContentColorAndOpacity : unreal.FLinearColor;
  @:ufunction @:final public function SetContentColorAndOpacity(InContentColorAndOpacity : unreal.FLinearColor) : Void;
  @:ufunction @:final public function SetPadding(InPadding : unreal.slatecore.FMargin) : Void;
  @:ufunction @:final public function SetHorizontalAlignment(InHorizontalAlignment : unreal.slatecore.EHorizontalAlignment) : Void;
  @:ufunction @:final public function SetVerticalAlignment(InVerticalAlignment : unreal.slatecore.EVerticalAlignment) : Void;
  @:ufunction @:final public function SetBrushColor(InBrushColor : unreal.FLinearColor) : Void;
  @:ufunction @:final public function SetBrush(InBrush : unreal.Const<unreal.PRef<unreal.slatecore.FSlateBrush>>) : Void;
  @:ufunction @:final public function SetBrushFromAsset(Asset : unreal.USlateBrushAsset) : Void;
  @:ufunction @:final public function SetBrushFromTexture(Texture : unreal.UTexture2D) : Void;
  @:ufunction @:final public function SetBrushFromMaterial(Material : unreal.UMaterialInterface) : Void;
  @:ufunction @:final public function GetDynamicMaterial() : unreal.UMaterialInstanceDynamic;
  
  /**
    Sets the DesireSizeScale of this border.
    
    @param InScale    The X and Y multipliers for the desired size
  **/
  @:ufunction @:final public function SetDesiredSizeScale(InScale : unreal.FVector2D) : Void;
  
}
