/**
 * 
 * WARNING! This file was autogenerated by: 
 *  _   _ _   _ __   __ 
 * | | | | | | |\ \ / / 
 * | | | | |_| | \ V /  
 * | | | |  _  | /   \  
 * | |_| | | | |/ /^\ \ 
 *  \___/\_| |_/\/   \/ 
 * 
 * This file was autogenerated by UnrealHxGenerator using UHT definitions.
 * It only includes UPROPERTYs and UFUNCTIONs. Do not modify it!
 * In order to add more definitions, create or edit a type with the same name/package, but with an `_Extra` suffix
**/
package unreal;

/**
  Determines how the refraction offset should be computed for the material.
**/
@:glueCppIncludes("Classes/Engine/EngineTypes.h")
@:uname("ERefractionMode")
@:uextern @:uenum extern enum ERefractionMode {
  
  /**
    Refraction is computed based on the camera vector entering a medium whose index of refraction is defined by the Refraction material input.
    The new medium's surface is defined by the material's normal.  With this mode, a flat plane seen from the side will have a constant refraction offset.
    This is a physical model of refraction but causes reading outside the scene color texture so is a poor fit for large refractive surfaces like water.
    @DisplayName Index Of Refraction
  **/
  @DisplayName("Index Of Refraction")
  RM_IndexOfRefraction;
  
}
