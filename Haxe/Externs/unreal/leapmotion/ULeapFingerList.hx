/**
   * 
   * WARNING! This file was autogenerated by: 
   *  _   _ _____     ___   _   _ __   __ 
   * | | | |  ___|   /   | | | | |\ \ / / 
   * | | | | |__    / /| | | |_| | \ V /  
   * | | | |  __|  / /_| | |  _  | /   \  
   * | |_| | |___  \___  | | | | |/ /^\ \ 
   *  \___/\____/      |_/ \_| |_/\/   \/ 
   * 
   * This file was autogenerated by UE4HaxeExternGenerator using UHT definitions. It only includes UPROPERTYs and UFUNCTIONs. Do not modify it!
   * In order to add more definitions, create or edit a type with the same name/package, but with an `_Extra` suffix
**/
package unreal.leapmotion;


/**
  The FingerList class represents a list of Finger objects.
  
  Leap API reference: https://developer.leapmotion.com/documentation/cpp/api/Leap.FingerList.html
**/
@:glueCppIncludes("LeapFingerList.h")
@:uextern extern class ULeapFingerList extends unreal.UObject {
  
  /**
    Appends the members of the specified FingerList to this FingerList.
    
    @param List - A FingerList object containing Finger objects to append to the end of this FingerList.
    @return the resultant list
  **/
  @:final public function Append(List : unreal.Const<unreal.leapmotion.ULeapFingerList>) : unreal.leapmotion.ULeapFingerList;
  public var IsEmpty : Bool;
  
  /**
    Number of fingers in this list.
  **/
  public var Count : unreal.Int32;
  
  /**
    Returns a new list containing those fingers in the current list that are extended.
    
    @return The list of extended fingers from the current list.
  **/
  @:final public function Extended() : unreal.leapmotion.ULeapFingerList;
  
  /**
    The member of the list that is farthest to the front within the standard Leap Motion frame of reference.
    
    @return The frontmost finger, or invalid if list is empty.
  **/
  @:final public function Frontmost() : unreal.leapmotion.ULeapFinger;
  
  /**
    The member of the list that is farthest to the left within the standard Leap Motion frame of reference
    
    @return The leftmost finger, or invalid if list is empty.
  **/
  @:final public function Leftmost() : unreal.leapmotion.ULeapFinger;
  
  /**
    Access a list member by its position in the list.
    
    @return The Finger object at the specified index.
  **/
  @:final public function GetPointableById(Id : unreal.Int32) : unreal.leapmotion.ULeapFinger;
  
  /**
    The member of the list that is farthest to the right within the standard Leap Motion frame of reference
    
    @return The rightmost finger, or invalid if list is empty.
  **/
  @:final public function Rightmost() : unreal.leapmotion.ULeapFinger;
  
}
