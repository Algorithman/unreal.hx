/**
   * 
   * WARNING! This file was autogenerated by: 
   *  _   _ _____     ___   _   _ __   __ 
   * | | | |  ___|   /   | | | | |\ \ / / 
   * | | | | |__    / /| | | |_| | \ V /  
   * | | | |  __|  / /_| | |  _  | /   \  
   * | |_| | |___  \___  | | | | |/ /^\ \ 
   *  \___/\____/      |_/ \_| |_/\/   \/ 
   * 
   * This file was autogenerated by UE4HaxeExternGenerator using UHT definitions. It only includes UPROPERTYs and UFUNCTIONs. Do not modify it!
   * In order to add more definitions, create or edit a type with the same name/package, but with an `_Extra` suffix
**/
package unreal.leapmotion;


/**
  The Finger class represents a tracked finger.
  
  Fingers are Pointable objects that the Leap Motion software has classified as a
  finger. Get valid Finger objects from a Frame or a Hand object.
  
  Leap API reference: https://developer.leapmotion.com/documentation/cpp/api/Leap.Finger.html
**/
@:glueCppIncludes("LeapFinger.h")
@:uextern extern class ULeapFinger extends unreal.leapmotion.ULeapPointable {
  
  /**
    The bone at a given bone type index on this finger.
    
    @param        Type value from the LeapBoneType enumeration identifying the bone of interest.
    @return       The Bone that has the specified bone type.
  **/
  @:final public function Bone(Type : unreal.leapmotion.LeapBoneType) : unreal.leapmotion.ULeapBone;
  
  /**
    Type of finger as enum (see LeapFingerType enum)
  **/
  public var Type : unreal.leapmotion.LeapFingerType;
  
  /**
    The Distal bone of this finger.
  **/
  public var Distal : unreal.leapmotion.ULeapBone;
  
  /**
    The Intermediate bone of this finger.
  **/
  public var Intermediate : unreal.leapmotion.ULeapBone;
  
  /**
    The Proximal bone of this finger.
  **/
  public var Proximal : unreal.leapmotion.ULeapBone;
  
  /**
    The Metacarpal bone of this finger.
  **/
  public var Metacarpal : unreal.leapmotion.ULeapBone;
  
}
