/**
 * 
 * WARNING! This file was autogenerated by: 
 *  _   _ _   _ __   __ 
 * | | | | | | |\ \ / / 
 * | | | | |_| | \ V /  
 * | | | |  _  | /   \  
 * | |_| | | | |/ /^\ \ 
 *  \___/\_| |_/\/   \/ 
 * 
 * This file was autogenerated by UnrealHxGenerator using UHT definitions.
 * It only includes UPROPERTYs and UFUNCTIONs. Do not modify it!
 * In order to add more definitions, create or edit a type with the same name/package, but with an `_Extra` suffix
**/
package unreal.headmounteddisplay;

@:umodule("HeadMountedDisplay")
@:glueCppIncludes("MotionControllerComponent.h")
@:uextern @:uclass extern class UMotionControllerComponent extends unreal.UPrimitiveComponent {
  
  /**
    The tracking status for the device (e.g. full tracking, inertial tracking only, no tracking)
  **/
  @:uproperty public var CurrentTrackingStatus : unreal.headmounteddisplay.ETrackingStatus;
  
  /**
    If false, render transforms within the motion controller hierarchy will be updated a second time immediately before rendering.
  **/
  @:uproperty public var bDisableLowLatencyUpdate : Bool;
  
  /**
    Which hand this component should automatically follow
  **/
  @:uproperty public var Hand : unreal.inputcore.EControllerHand;
  
  /**
    Which player index this motion controller should automatically follow
  **/
  @:uproperty public var PlayerIndex : unreal.Int32;
  
  /**
    Whether or not this component had a valid tracked device this frame
  **/
  @:ufunction(BlueprintCallable) @:thisConst @:final public function IsTracked() : Bool;
  
}
