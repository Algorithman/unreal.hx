/**
   * 
   * WARNING! This file was autogenerated by: 
   *  _   _ _   _ __   __ 
   * | | | | | | |\ \ / / 
   * | | | | |_| | \ V /  
   * | | | |  _  | /   \  
   * | |_| | | | |/ /^\ \ 
   *  \___/\_| |_/\/   \/ 
   * 
   * This file was autogenerated by UE4HaxeExternGenerator using UHT definitions. It only includes UPROPERTYs and UFUNCTIONs. Do not modify it!
   * In order to add more definitions, create or edit a type with the same name/package, but with an `_Extra` suffix
**/
package unreal;

@:glueCppIncludes("Sound/SoundBase.h")
@:uextern @:uclass extern class USoundBase extends unreal.UObject {
  
  /**
    The source effect chain to use for this sound.
  **/
  @:uproperty public var SourceEffectChain : unreal.USoundEffectSourcePresetChain;
  
  /**
    The default amount of audio to send to the master reverb effect for this sound if reverb is enabled for the sound.
    This can be overridden by sound attenuation settings for 3d sounds.
  **/
  @:uproperty public var DefaultMasterReverbSendAmount : unreal.Float32;
  
  /**
    An array of submix sends. Audio from this sound will send a portion of its audio to these effects.
  **/
  @:uproperty public var SoundSubmixSends : unreal.TArray<unreal.FSoundSubmixSendInfo>;
  
  /**
    Sound submix this sound belongs to.
    Audio will play here and traverse through the submix graph.
    A null entry will make the sound obey the default master effects graph.
  **/
  @:uproperty public var SoundSubmixObject : unreal.USoundSubmix;
  
  /**
    Sound priority (higher value is higher priority) used for concurrency resolution. This priority value is weighted against the final volume of the sound.
  **/
  @:uproperty public var Priority : unreal.Float32;
  
  /**
    Attenuation settings package for the sound
  **/
  @:uproperty public var AttenuationSettings : unreal.USoundAttenuation;
  
  /**
    Duration of sound in seconds.
  **/
  @:uproperty public var Duration : unreal.Float32;
  
  /**
    Maximum number of times this sound can be played concurrently.
  **/
  @:deprecated @:uproperty public var MaxConcurrentPlayCount_DEPRECATED : unreal.Int32;
  @:deprecated @:uproperty public var MaxConcurrentResolutionRule_DEPRECATED : unreal.EMaxConcurrentResolutionRule;
  
  /**
    If Override Concurrency is true, concurrency settings to use.
  **/
  @:uproperty public var ConcurrencyOverrides : unreal.FSoundConcurrencySettings;
  
  /**
    If Override Concurrency is false, the sound concurrency settings to use for this sound.
  **/
  @:uproperty public var SoundConcurrencySettings : unreal.USoundConcurrency;
  
  /**
    Whether or not to ignore focus on this sound.
  **/
  @:uproperty public var bIgnoreFocus : Bool;
  
  /**
    Whether or not to override the sound concurrency object with local concurrency settings.
  **/
  @:uproperty public var bOverrideConcurrency : Bool;
  
  /**
    When "stat sounds -debug" has been specified, draw this sound's attenuation shape when the sound is audible. For debugging purpose only.
  **/
  @:uproperty public var bDebug : Bool;
  
  /**
    Sound class this sound belongs to
  **/
  @:uproperty private var SoundClassObject : unreal.USoundClass;
  
}
