/**
 * 
 * WARNING! This file was autogenerated by: 
 *  _   _ _   _ __   __ 
 * | | | | | | |\ \ / / 
 * | | | | |_| | \ V /  
 * | | | |  _  | /   \  
 * | |_| | | | |/ /^\ \ 
 *  \___/\_| |_/\/   \/ 
 * 
 * This file was autogenerated by UnrealHxGenerator using UHT definitions.
 * It only includes UPROPERTYs and UFUNCTIONs. Do not modify it!
 * In order to add more definitions, create or edit a type with the same name/package, but with an `_Extra` suffix
**/
package unreal.html5platformeditor;

/**
  Implements the settings for the HTML5 target platform.
**/
@:umodule("HTML5PlatformEditor")
@:glueCppIncludes("HTML5TargetSettings.h")
@:uextern @:uclass extern class UHTML5TargetSettings extends unreal.UObject {
  
  /**
    Provide another level of nesting beyond the bucket. Can be left empty, defaults to game name. DO NOT LEAVE A TRAILING SLASH!
  **/
  @:uproperty public var S3FolderName : unreal.FString;
  
  /**
    Required
  **/
  @:uproperty public var S3BucketName : unreal.FString;
  
  /**
    Required
  **/
  @:uproperty public var S3SecretAccessKey : unreal.FString;
  
  /**
    Required
  **/
  @:uproperty public var S3KeyID : unreal.FString;
  
  /**
    Required
  **/
  @:uproperty public var S3Region : unreal.FString;
  @:uproperty public var UploadToS3 : Bool;
  
  /**
    Generate Delta Pak files for these level transitions.
  **/
  @:uproperty public var LevelTransitions : unreal.TArray<unreal.html5platformeditor.FHTML5LevelTransitions>;
  
  /**
    Use a loading level and download maps during transitions.
  **/
  @:uproperty public var UseAsyncLevelLoading : Bool;
  
  /**
    Port to use when deploying game from the editor
  **/
  @:uproperty public var DeployServerPort : unreal.Int32;
  
  /**
    Setting to control HTML5 Heap size
  **/
  @:uproperty public var HeapSizeShipping : unreal.Int32;
  
  /**
    Setting to control HTML5 Heap size (in Development)
  **/
  @:uproperty public var HeapSizeDevelopment : unreal.Int32;
  
  /**
    Compress Files
    NOTE 1: it is also recommended to NOT enable PAK file packaging - this is currently redundant
    NOTE 2: future emscripten version will allow separate (asset) files in a new FileSystem feature - which will make use of this (as well as PAK file) option again
  **/
  @:uproperty public var Compressed : Bool;
  
  /**
    Enable Tracing (trace.h)
  **/
  @:uproperty public var EnableTracing : Bool;
  
  /**
    Enable Multithreading
    NOTE 1: this is not supported currently in WASM - it will be forced false in this case.
    NOTE 2: Multithreading will be supported during WASM builds in a future emscripten release.
  **/
  @:uproperty public var EnableMultithreading : Bool;
  
  /**
    Enable SIMD
    NOTE 1: this does not currently work with WASM - it will be forced false in this case.
    NOTE 2: SIMD will be supported during WASM builds in a future emscripten release.
  **/
  @:uproperty public var EnableSIMD : Bool;
  
  /**
    Use Fixed TimeStep
  **/
  @:uproperty public var UseFixedTimeStep : Bool;
  
  /**
    Use IndexedDB storage
  **/
  @:uproperty public var EnableIndexedDB : Bool;
  
  /**
    Target WebGL1 builds
    NOTE: WebGL1 target will be going away soon...
  **/
  @:uproperty public var TargetWebGL1 : Bool;
  
  /**
    Target ASMJS builds
    NOTE 1: to ensure this fits in memory space, build this for "Shipping"
    NOTE 2: ASMJS will be going away in future UE4 releases.
  **/
  @:uproperty public var TargetAsmjs : Bool;
  
}
